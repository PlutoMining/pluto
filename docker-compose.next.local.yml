services:
  # app_proxy:
  #   environment:
  #     APP_HOST: plutomining-pluto-next_frontend_1 # Hostname of the pluto application
  #     APP_PORT: 7677 # Port number of the pluto application
  #   # ports:
  #   #   - "7677:7677" # Proxy listens on port 7677 on the host and forwards to APP_HOST:APP_PORT
  #   depends_on:
  #     - frontend
  #   restart: unless-stopped

  mock:
    # build:
    #   context: .
    #   dockerfile: mock/Dockerfile
    image: registry.gitlab.com/plutomining/pluto/pluto-mock:0.6.0-beta.19 # Docker image with specific version
    container_name: plutomining-pluto-next_mock_1
    ports:
      - "7670:7670"
      - "7651:7651"
      - "7652:7652"
      - "7653:7653"
      - "7654:7654"
      - "7655:7655"
      - "7656:7656"
      - "7657:7657"
      - "7658:7658"
      - "7659:7659"
      - "7660:7660"
    pid: host

    # Container restart policy - restart unless manually stopped
    restart: unless-stopped
    # env_file:
    #   - mock/.env.local
    environment:
      - LISTING_PORT=7670
      - PORTS=7651,7652,7653,7654,7655,7656,7657,7658,7659,7660
      - LOGS_PUB_ENABLED=false
    # volumes:
    #   - ./common/logger:/common/logger:ro # Monta il modulo in read-only
    #   - ./common/interfaces:/common/interfaces:ro # Monta il modulo in read-only
    #   - ./mock:/app/

  discovery:
    # build:
    #   context: .
    #   dockerfile: discovery/Dockerfile
    image: registry.gitlab.com/plutomining/pluto/pluto-discovery:0.6.0-beta.19 # Docker image with specific version
    container_name: plutomining-pluto-next_discovery_1
    network_mode: "host"
    # ports:
    #   - "7675:7675" # Map port 7675 on the host to port 7675 on the container
    pid: host

    # Container restart policy - restart unless manually stopped
    restart: unless-stopped
    env_file:
      - discovery/.env.next.local
    environment:
      - PORT=7675
      - DETECT_MOCK_DEVICES=true
      # - MOCK_DISCOVERY_HOST=http://172.17.0.1:7670
    volumes:
      # - ./common/interfaces:/common/interfaces:ro # Monta il modulo in read-only
      # - ./common/db:/common/db:ro # Monta il modulo in read-only
      # - ./common/logger:/common/logger:ro # Monta il modulo in read-only
      # - ./discovery:/app/
      - ./data/leveldb:/app/data

  backend:
    # build:
    #   context: .
    #   dockerfile: backend/Dockerfile
    image: registry.gitlab.com/plutomining/pluto/pluto-backend:0.6.0-beta.19 # Docker image with specific version
    container_name: plutomining-pluto-next_backend_1
    ports:
      - "7676:7676"
    pid: host

    # Container restart policy - restart unless manually stopped
    restart: unless-stopped
    env_file:
      - backend/.env.next.local
    environment:
      - PORT=7676
      - AUTO_LISTEN=true
      # - DISCOVERY_SERVICE_HOST=http://172.17.0.1:7675
      - GF_HOST=http://plutomining-pluto-next_grafana_1:3000
      - DELETE_DATA_ON_DEVICE_REMOVE=true
    volumes:
      #Â - ./common/utils:/common/utils:ro # Monta il modulo in read-only
      # - ./common/interfaces:/common/interfaces:ro # Monta il modulo in read-only
      # - ./common/db:/common/db:ro # Monta il modulo in read-only
      # - ./common/logger:/common/logger:ro # Monta il modulo in read-only
      # - ./backend:/app/
      # - ./grafana/templates:/app/grafana_templates/
      - ./data/leveldb:/app/data
      - ./data/grafana:/app/grafana
    depends_on:
      prometheus:
        condition: service_healthy
      grafana:
        condition: service_healthy

  frontend:
    # build:
    #   context: .
    #   dockerfile: frontend/Dockerfile
    image: registry.gitlab.com/plutomining/pluto/pluto-frontend:0.6.0-beta.23 # Docker image with specific version
    container_name: plutomining-pluto-next_frontend_1
    ports:
      - "7677:7677" # Map port 7777 on the host to port 7777 on the container
    # Use the host's PID namespace to allow container processes to be visible on the host
    pid: host

    # Container restart policy - restart unless manually stopped
    restart: unless-stopped
    depends_on:
      - backend
    # env_file:
    #   - frontend/.env.local
    environment:
      - PORT=7677
      - GF_HOST=http://plutomining-pluto-next_grafana_1:3000
      - BACKEND_DESTINATION_HOST=http://plutomining-pluto-next_backend_1:7676
      # - NEXT_PUBLIC_WS_ROOT=ws://localhost:7676
    volumes:
      - ./umbrel-app.next.yml:/tmp/umbrel-app.yml:ro
    #   - ./common/utils:/common/utils:ro # Monta il modulo in read-only
    #   - ./common/interfaces:/common/interfaces:ro # Monta il modulo in read-only
    #   - ./frontend:/app/

  prometheus:
    image: prom/prometheus:v2.53.1
    container_name: plutomining-pluto-next_prometheus_1
    volumes:
      - ./data/prometheus:/prometheus
      - ./prometheus/prometheus.next.yml:/etc/prometheus/prometheus.yml
    # ports:
    #   - "9090:9090"
    pid: host
    healthcheck:
      test:
        - "CMD-SHELL"
        - "wget --spider --quiet http://localhost:9090/-/ready || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana:11.1.2
    container_name: plutomining-pluto-next_grafana_1
    # ports:
    #   - "7778:3000"
    pid: host
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=marcusolsson-treemap-panel
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./grafana/grafana.next.ini:/etc/grafana/grafana.ini
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/datasource.next.yaml:/etc/grafana/provisioning/datasources/main.yaml
    healthcheck:
      test:
        - "CMD-SHELL"
        - "wget --spider --quiet http://localhost:3000/api/health || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      prometheus:
        condition: service_healthy # Attende che prometheus sia in stato "healthy"
